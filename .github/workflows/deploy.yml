name: Deploy
on:
  workflow_dispatch:

jobs:
  build_jar:
    name: Build Jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
      - name: Rename jar
        run: mv target/*-All.jar JMusicBot-Snapshot-All.jar
      - name: Upload jar
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: JMusicBot-Snapshot-All.jar
          if-no-files-found: error
  deploy:
    name: Deploy Docker
    runs-on: ubuntu-latest
    needs: build_jar
    steps:
      - name: Test dokcer credentials with curl
        run: curl -X GET -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} -L https://${{ secrets.DOCKER_REGISTRY }}/v2/mother-mouse-musicbot/tags/list
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: jar
          path: ./target/
      - name: Show Artifacts
        run: ls -R
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      # - name: Docker Setup Buildx
      #   uses: docker/setup-buildx-action@v3.3.0
      #   with:
      #     buildkitd-flags: --debug
      # - name: Set up containerd
      #   uses: crazy-max/ghaction-setup-containerd@v2
      # - name: Build Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     platforms: linux/amd64
      #     tags: ${{ secrets.DOCKER_REGISTRY }}/mother-mouse-musicbot:latest
      #     outputs: type=oci,dest=/tmp/image.tar
      # - name: Import image in containerd
      #   run: |
      #     sudo ctr i import --base-name ${{ secrets.DOCKER_REGISTRY }}/mother-mouse-musicbot --digests --all-platforms /tmp/image.tar
      # - name: Push image with containerd
      #   run: |
      #     sudo ctr --debug i push --user "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" ${{ secrets.DOCKER_REGISTRY }}/mother-mouse-musicbot:latest
      
      # - name: Docker Meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ secrets.DOCKER_REGISTRY }}/mother-mouse-musicbot
      #     tags: type=sha
      # - name: Login to Docker
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ secrets.DOCKER_REGISTRY }}
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      # - name: Deploy to Docker
      #   uses: docker/build-push-action@v5
      #   with:
      #     # tags: ${{ steps.meta.outputs.tags }}
      #     tags: ${{ secrets.DOCKER_REGISTRY }}/mother-mouse-musicbot:latest
      #     context: .
      #     push: true
      #     cache-from: 'type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/mother-mouse-musicbot:buildcache'
      #     cache-to: 'type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/mother-mouse-musicbot:buildcache,mode=max'
      - name: Deploy to Registry
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: mother-mouse-musicbot
          tags: latest
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Trigger Watchtower via curl
        run: |
          curl -L -I -H "Authorization: Bearer ${{ secrets.WATCHTOWER_TOKEN }}" "${{ secrets.WATCHTOWER_URL }}"